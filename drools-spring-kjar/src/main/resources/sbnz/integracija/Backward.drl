package sbnz.integracija;

import java.util.ArrayList;
import java.util.List;
import sbnz.integracija.example.model.Pet;
import sbnz.integracija.example.model.User;
import sbnz.integracija.example.model.Helper;
import sbnz.integracija.example.model.Family;
import sbnz.integracija.example.model.ForbiddenPet;
import sbnz.integracija.example.model.Location;
//buduci da ovo radim za psa, onda ne treba da bodujem samo imam if else 
//ovo je za decu, to jos nismo odlucili
global Pet perfectPetForChildren;

global String petExist;

query isGoodForDog()
    $pet: Pet($petId: id, $minYears: minYears, $type : type)
    $u: Family( $childrenYears : childrenYears, $afraidOf: afraidOf, $alergicOn : alergicOn)
    Number($value: intValue < 1 ) from accumulate(
        	String($t:this, this == $type) from $alergicOn,
        	count($t)
        )
         Number($valuee: intValue < 1 ) from accumulate(
        	String($t:this, this == $type) from $afraidOf,
        	count($t)
        )
    isPersonalityGoodForPet()
end

query isPersonalityGoodForPet()
	$u: Family($personalities: personalities )
    $pet: Pet($personalities == adoptableOnKids )//todo mozda jos nesto
end

//query isContainedIn( String x, String y ) //ako nekom nije jasno, pokazati napisano iz sveske
//  ForbiddenPet( x, y; )
//  or
//  ( ForbiddenPet( z, y; ) and isContainedIn( x, z; ) )
//end

query isContainedIn( String x, String y )
  Location( x, y; )
  or
  ( Location( z, y; ) and isContainedIn( x, z; ) )
end


rule "go1"
when
    String( this == "go1" )
    isGoodForDog()
    $pet: Pet()
then
 	drools.getKnowledgeRuntime().setGlobal("perfectPetForChildren", $pet);
    System.out.println( "pronadjen" );
end

rule "go2"
when
    String( this == "go2" )
    isContainedIn("fish", "ForbiddenPets"; )
then
    System.out.println( "pet is in tree" );
    drools.getKnowledgeRuntime().setGlobal("petExist", "pet is in list"); //ljubimac se nalazi u listi i ne moze da bude za vlasnika
end

//pitaj da li je ovo ok????
rule "physical activity good In Sport"
	agenda-group "childrens-personalities"
	//salience 1
	no-loop
	when
		$u: Family( $goodInSport: goodInSport )
		//($goodInSport)
		$helper: Helper()
	then
		$helper.setText("1");
		System.out.println("Added score for goodInSport. ");
		$u.setPersonalities($u.getPersonalities() + 1);
		update($helper);
		update($u);
end;


rule "physical activity "
	agenda-group "childrens-personalities"
	//salience 1
	no-loop
	when
		$u: Family( $physiclyActive: physiclyActive )
		//($physiclyActive )
		$helper: Helper()
	then
		$helper.setText("2");
		System.out.println("Added score for goodInSport. ");
		$u.setPersonalities($u.getPersonalities() + 2);
		update($helper);
		update($u);
end;

rule "love reserching "
	agenda-group "childrens-personalities"
	//salience 1
	no-loop
	when
		$u: Family( $loveReserching: loveReserching )
		//($loveReserching )
		$helper: Helper()
	then
		$helper.setText("3");
		System.out.println("Added score for goodInSport. ");
		$u.setPersonalities($u.getPersonalities() + 1);
		update($helper);
		update($u);
end;

rule "introvert ekstrovert"
	agenda-group "childrens-personalities"
	//salience 1
	no-loop
	when
		$u: Family( $introvertEkstrovert: introvertEkstrovert )
		//($introvertEkstrovert )
		$helper: Helper()
	then
		$helper.setText("4");
		System.out.println("Added score for goodInSport. ");
		$u.setPersonalities($u.getPersonalities() + 3);
		update($helper);
		update($u);
end;

rule "more time"
	agenda-group "childrens-personalities"
	//salience 1
	no-loop
	when
		$u: Family( $moreTime: moreTime )
		//($moreTime )
		$helper: Helper()
	then
		$helper.setText("5");
		System.out.println("Added score for goodInSport. "+$moreTime);
		$u.setPersonalities($u.getPersonalities() + 2);
		update($helper);
		update($u);
end;